% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BNLearning_func.R
\name{learnDAG}
\alias{learnDAG}
\title{Learn the principle DAG from data}
\usage{
learnDAG(
  dat,
  frac = 0.3,
  N_smpl = 10,
  params = c(1:100)/100,
  whiteList = NULL,
  blackList = NULL,
  root = NULL,
  ugMethod = "cmi2ni",
  dagMethod = "hc",
  ncores = 1,
  mode = "single_cell",
  Emin = 1,
  Emax = 50
)
}
\arguments{
\item{dat}{Seurat object for input}

\item{frac}{numeric, the fraction of cells for every sampling}

\item{N_smpl}{numeric, the total times of sampling}

\item{params}{numeric, the parameters used for UG_method}

\item{whiteList}{data.frame, the list of arcs that must exist in the network}

\item{blackList}{data.frame, the list of arcs that can't exist in the network}

\item{root}{character, the root of the graph, which can't have any node pointing to.}

\item{ugMethod}{character, determine the UG_method used, usually cmi2ni. Other alternatives including ns/GeneNet/glasso/pcacmi/bayesianglasso}

\item{dagMethod}{character, determine the method that calculate the arc direction, usually hc}

\item{ncores}{integer,the cores that used to speed up the calculation}

\item{mode}{character, can be 'single_cell' or 'bulk'}

\item{Emin}{integer, a DAG is adopted only when it has more edges than Emin}

\item{Emax}{integer, a DAG is adopted only when it has less edges than Emax}
}
\description{
\code{learnDAG} uses \code{BNLearning} to generate a set of possible DAGs representing
the differentiation network and analyses these graphs to give the final DAG.
}
